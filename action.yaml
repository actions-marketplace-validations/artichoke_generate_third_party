---
name: "Generate THIRDPARTY"
description: "Generate license listing of third party dependencies in Artichoke Ruby"

inputs:
  artichoke_ref:
    required: true
    type: string
  target_triple:
    required: true
    type: string
  output_file:
    required: true
    type: string
  github_token:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    # https://github.com/actions/checkout/issues/135
    - name: Setup git line ending checkout behavior
      shell: bash
      if: runner.os == 'Windows'
      run: |
        git config --system core.autocrlf false
        git config --system core.eol lf

    - name: Clone Artichoke
      uses: actions/checkout@v3
      with:
        repository: artichoke/artichoke
        ref: ${{ inputs.artichoke_ref }}
        path: "generate-third-party-artichoke-${{ inputs.artichoke_ref }}"

    - name: Install generate_third_party
      shell: bash
      run: |
        gem build generate_third_party.gemspec
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo gem install generate_third_party-1.6.0.gem
        else
          gem install generate_third_party-1.6.0.gem
        fi
      working-directory: ${{ github.action_path }}

    - name: Install cargo-about
      shell: bash
      run: install-cargo-about --platform "${{ runner.os }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Update stable rust
      shell: bash
      run: rustup update stable

    - name: Generate THIRDPARTY
      shell: bash
      run: |
        generate-third-party-text-file-single-target \
          --target "${{ inputs.target_triple }}" \
          "${{ github.workspace }}/generate-third-party-artichoke-${{ inputs.artichoke_ref }}/Cargo.toml" \
          > "${{ inputs.output_file }}"
      env:
        RUST_TOOLCHAIN: stable

    - name: Cleanup
      shell: bash
      run: rm -rf "${{ github.workspace }}/generate-third-party-artichoke-${{ inputs.artichoke_ref }}"
