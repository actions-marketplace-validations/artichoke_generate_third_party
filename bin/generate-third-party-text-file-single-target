#!/usr/bin/env ruby
# frozen_string_literal: true

# avoid ugly stacks on permissible signals
Signal.trap('INT', 'SYSTEM_DEFAULT') if Signal.list.include?('INT')
Signal.trap('PIPE', 'SYSTEM_DEFAULT') if Signal.list.include?('PIPE')

require 'generate_third_party'

KNOWN_TARGETS = %w[
  aarch64-apple-darwin
  aarch64-unknown-linux-gnu
  aarch64-unknown-linux-musl
  i686-pc-windows-gnu
  i686-pc-windows-msvc
  i686-unknown-linux-gnu
  x86_64-apple-darwin
  x86_64-pc-windows-gnu
  x86_64-pc-windows-msvc
  x86_64-unknown-linux-gnu
  x86_64-unknown-linux-musl
].freeze

target = ARGV[0]
if target.nil?
  warn <<~ERR
    Error: Missing required TARGET argument.

    Usage: generate-third-party-text-file-single-target TARGET manifest-path

    Where TARGET is one of:

    #{KNOWN_TARGETS.map { |target| "- #{target}" }.join("\n").strip}
  ERR
  exit 2
end

manifest_path = ARGV[1]
if manifest_path.nil? || !manifest_path.end_with?('Cargo.toml')
  warn 'Error: Must pass path to `Cargo.toml` as positional argument.'
  exit 1
end

unless KNOWN_TARGETS.include?(target)
  warn <<~ERR
    Error: Unknown TARGET.

    Usage: generate-third-party-text-file-single-target TARGET

    Where TARGET is one of:

    - x86_64-unknown-linux-gnu
    - x86_64-unknown-linux-musl
    - x86_64-pc-windows-msvc
    - x86_64-apple-darwin
    - aarch64-apple-darwin
  ERR
  exit 2
end

unless Artichoke::Generate::ThirdParty::CargoAbout.present?
  warn <<~ERR
    Error: `cargo-about` not found in PATH.

    Try installing `cargo-about` with:

        cargo install cargo-about

  ERR
  exit 1
end

puts Artichoke::Generate::ThirdParty::OneTarget.third_party_flatfile(target, manifest_path)
